// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  basketIds      String[] @db.ObjectId
  completed      String[] @db.ObjectId
  course         Course[]
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  createdAt   DateTime  @default(now())
  imageSrc    String
  author      String
  price       Int
  duration    Int
  description String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @db.ObjectId
  sections    Section[]
  quiz        Quiz[]
}

model Section {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String   @db.ObjectId
}

model Quiz {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String     @unique
  description    String?
  question_count Int        @default(10)
  questions      Question[]
  course         Course     @relation(fields: [courseId], references: [id])
  courseId       String     @db.ObjectId
}

model Question {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  question String
  quiz_id  String   @db.ObjectId
  answers  Answer[]
  quiz     Quiz     @relation(fields: [quiz_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Answer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  correct     Boolean
  question_id String   @db.ObjectId
  question    Question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
